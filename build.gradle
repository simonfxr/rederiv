plugins {
    id 'java'
    id 'eclipse'
    id "com.github.spotbugs" version "4.4.2"
}

allprojects{
    repositories {
        jcenter()
    }
}

repositories {
    mavenCentral()
}

group 'de.sfxr'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

sourceSets {
    jmh
}

// eclipse {
//     classpath {
//         plusConfigurations.add(configurations.jmhImplementation)
//         defaultOutputDir = file("$buildDir/classes-jmh-ide")
//     }
// }

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'com.google.guava:guava:28.2-jre'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    jmhImplementation project
    jmhImplementation 'org.openjdk.jmh:jmh-core:1.23'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.23'
}

task jmh(type: JavaExec, description: 'Executing JMH benchmarks') {
    classpath = sourceSets.jmh.runtimeClasspath
    main = 'org.openjdk.jmh.Main'

    def include = project.properties.get('include', '')
    def format = project.properties.get('format', 'json')
    def resultFile = file("build/reports/jmh/result.${format}")
    resultFile.parentFile.mkdirs()

    if (!include)
        include = '.*'

    args include
    args '-rf', format
    args '-rff', resultFile
}
